"""create initial tables

Revision ID: b61aac84ce31
Revises: 
Create Date: 2025-04-26 08:25:21.125710

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b61aac84ce31'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('target_url', sa.String(length=255), nullable=False),
    sa.Column('secret', sa.String(length=255), nullable=True),
    sa.Column('event_type_filter', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('delivery_tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_attempt_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_attempt_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('attempts_count', sa.Integer(), nullable=False),
    sa.Column('last_http_status', sa.Integer(), nullable=True),
    sa.Column('last_error', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_delivery_tasks_next_attempt_at', 'delivery_tasks', ['next_attempt_at'], unique=False, postgresql_where=sa.text("status = 'retrying'"))
    op.create_index('idx_delivery_tasks_status', 'delivery_tasks', ['status'], unique=False)
    op.create_index('idx_delivery_tasks_subscription_id', 'delivery_tasks', ['subscription_id'], unique=False)
    op.create_table('delivery_attempts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('delivery_task_id', sa.UUID(), nullable=False),
    sa.Column('attempt_number', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('outcome', sa.String(length=50), nullable=False),
    sa.Column('http_status', sa.Integer(), nullable=True),
    sa.Column('error_details', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['delivery_task_id'], ['delivery_tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_delivery_attempts_delivery_task_id', 'delivery_attempts', ['delivery_task_id'], unique=False)
    op.create_index('idx_delivery_attempts_timestamp', 'delivery_attempts', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_delivery_attempts_timestamp', table_name='delivery_attempts')
    op.drop_index('idx_delivery_attempts_delivery_task_id', table_name='delivery_attempts')
    op.drop_table('delivery_attempts')
    op.drop_index('idx_delivery_tasks_subscription_id', table_name='delivery_tasks')
    op.drop_index('idx_delivery_tasks_status', table_name='delivery_tasks')
    op.drop_index('idx_delivery_tasks_next_attempt_at', table_name='delivery_tasks', postgresql_where=sa.text("status = 'retrying'"))
    op.drop_table('delivery_tasks')
    op.drop_table('subscriptions')
    # ### end Alembic commands ###
